services:                                               # 이 항목 밑에 실행하려는 컨테이너들을 정의
  study-app: # 애플리케이션 서버를 설정하는 역할을 하는 서비스
    build:
      context: . # Docker 이미지 빌드에 사용할 파일들이 있는 디렉터리 경로입니다. 여기서는 현재 경로의 app 디렉터리를 사용
      dockerfile: Dockerfile
    container_name: study-app
    ports:
      - "8080:8080"
    image: heeyoungha/study-app:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://sopt.cj6c6qseak8m.ap-northeast-2.rds.amazonaws.com:3306/sopt  # 애플리케이션에서 사용할 데이터베이스의 URL # study-database라는 이름의 컨테이너에서 3306 포트로 접근할 수 있는 MySQL 데이터베이스를 가리킴
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - KAKAO_REST_API_KEY=${KAKAO_REST_API_KEY}
    env_file:
      - .env
    restart: always # depends on은 실행 순서만 컨트롤 할뿐,
    # 컨테이너 안의 서비스가 실행가능한 상태인지까지는 확인 하지 않기 때문에
    # DB 또는 Redis가 아직 실행가능한 상태가 아니여서 실패하는 경우 재시작 하도록 설정

  nginx: # Nginx 웹 서버를 설정하는 역할
    image: nginx:alpine
    container_name: study-nginx
    ports:
      - "80:80" # 80:80: 호스트의 포트 80을 컨테이너의 포트 80과 연결합니다. 즉, 외부에서 http://localhost로 접속하면 컨테이너의 80 포트로 요청이 전달됩니다.
      - "443:443" # 443:443: 호스트의 포트 443을 컨테이너의 포트 443과 연결합니다. 이는 HTTPS 연결을 의미
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # 호스트의 nginx.conf 파일(Nginx의 메인 설정 파일)을 컨테이너의 해당 위치에 마운트(읽기 전용 - ro)
      - ./nginx/conf.d:/etc/nginx/conf.d:ro # Nginx의 추가 설정 파일들을 담고 있는 conf.d 디렉터리를 마운트
      - ./certbot/conf:/etc/letsencrypt #  Let's Encrypt 인증서 관련 파일을 마운트합니다. SSL/TLS 인증서를 저장하고 관리
      - ./certbot/www:/var/www/certbot # Certbot이 인증서를 검증할 때 사용하는 웹 서버 디렉터리를 마운트
    depends_on:
      - study-app